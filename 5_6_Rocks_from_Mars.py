"""Задача "Камни с Марса".

При отправке марсианской миссии множество научных лабораторий и музеев сделали
заказы на доставку образцов марсианских горных пород.

В каждом заказе обозначен минимальный вес требуемого образца: заказчик готов
получить образец указанного веса или тяжелее, но никак не меньше.

Марсианские булыжники были доставлены на Землю, но ни их количество,
ни вес не соответствуют заказам в точности:

8 5 5 8 6 9 8 2 4 7   # Заказано 10 образцов;
                      # каждый элемент - вес заказанного образца.

9 8 1 1 1 5 10 8      # Доставлено 8 образцов;
                      # каждый элемент - вес доставленного образца.

Ваша задача: написать программу, которая распределит образцы между заказчиками
оптимальным образом — так, чтобы выполнить требования макс. числа заказчиков.

Требование заказчика считается выполненным, если он получит образец,
вес которого равен заказанному или превышает заказанный вес.

Программа должна вернуть число заказчиков, которые получили образцы,
соответствующие их требованиям.

8 5 5 8 6 9 8 2 4 7   # Заказано.
9 8 1 1 1 5 10 8      # Доставлено.

8 5 5 8  6 9 8 2 4 7  # Доставленные образцы, распределённые между заказчиками
| | | |  |            # (один из возможных вариантов).
9 8 5 10 8            # Три образца весом 1 кг остались невостребованными.

# Результат (число заказчиков, получивших желаемое):
5
Булыжники нельзя дробить на части, а каждый заказчик может получить только по
одному образцу.

Формат ввода
В первой строке записано число n — количество заказов от музеев и лабораторий.
Это количество не превышает 10 000.

Во второй строке — n чисел, разделённых пробелом. Каждое число — это
минимальный вес образца, который требуется заказчику. Это натуральные числа,
не превосходящие 1000.

В третьей строке записано число m — количество образцов, доставленных с Марса.
Это количество не превышает 10 000.

В четвёртой строке — m чисел: это вес каждого из доставленных образцов;
значения в этой строке не превышают 1000.

Формат вывода
Нужно вывести одно число — количество заказчиков, требования которых удовл.
"""

from typing import List


def count_matching_stones(
    ordered_stones: list[int], delivered_stones: List[int]
) -> int:
    """Считаем подходящие камни для заказчиков."""
    result = 0
    ordered_sort = sorted(ordered_stones)
    delivered_sort = sorted(delivered_stones)
    while delivered_sort and ordered_sort:
        if delivered_sort[-1] >= ordered_sort[-1]:
            result += 1
            delivered_sort.pop()
        ordered_sort.pop()

    return result


if __name__ == '__main__':
    # ordered = int(input())
    # ordered_stones = [int(i) for i in input().split()]
    # devivered = int(input())
    # delivered_stones = [int(i) for i in input().split()]

    # print(count_matching_stones(ordered_stones, delivered_stones))

    test_1_1 = [8, 5, 5, 8, 6, 9, 8, 2, 4, 7]
    test_1_2 = [9, 8, 1, 1, 1, 5, 10, 8]

    test_2_1 = [8, 2, 4, 7, 8, 5, 5, 8, 6, 9]
    test_2_2 = [9, 8, 1, 1, 1, 5, 10, 8, 2, 7, 4, 3, 15]

    test_3_1 = [2, 4, 3, 7, 10, 4, 2, 1, 4]
    test_3_2 = [1, 5, 5, 4, 8, 6, 5]

    test_4_1 = [1, 2, 5, 3, 5, 9, 6, 9]
    test_4_2 = [7, 2, 6]

    assert count_matching_stones(test_1_1, test_1_2) == 5
    assert count_matching_stones(test_2_1, test_2_2) == 9
    assert count_matching_stones(test_3_1, test_3_2) == 7
    assert count_matching_stones(test_4_1, test_4_2) == 3
