# Для работы на Марсе разработан специализированный барометр — датчик
# атмосферного давления «Олимп», названный в честь самой высокой горы на Марсе.
# Программное обеспечение датчика постоянно обновляется; версии ПО нумеруются
# от нуля по порядку. К настоящему моменту работает версия 32.

# Каждое последующее поколение ПО может делать столько же замеров в секунду,
# сколько делали два предыдущих поколения в сумме.

# Поколения нумеруются с нуля. Нулевое и первое поколение могли выполнять
# по одному измерению в секунду. Второе поколение делало 1 + 1 = 2 измерения
# в секунду. Третье поколение — 1 + 2 = 3 измерения в секунду, четвёртое
# — 2 + 3 = 5, пятое — 3 + 5 = 8… От поколения к поколению число замеров
# растёт в соответствии с последовательностью Фибоначчи —
# наверное, это такая шутка инженеров.

# Напишите рекурсивную функцию, которая по номеру поколения будет возвращать
# количество измерений в секунду, которое способен выполнять датчик.

# Формат ввода
# Целое число от 0 до 32, обозначающее поколение датчика.

# Формат вывода
# Целое число, обозначающее кол-во измерений в секунду для данного поколения.


def find_num_dimensions(num):
    if num <= 1:
        return num
    else:
        return find_num_dimensions(num - 1) + find_num_dimensions(num - 2)


if __name__ == '__main__':
    num = int(input())
    print(find_num_dimensions(num))


# print(find_num_dimensions(3))

assert find_num_dimensions(0) == 1
assert find_num_dimensions(1) == 1
assert find_num_dimensions(2) == 2
assert find_num_dimensions(3) == 3
assert find_num_dimensions(4) == 5
assert find_num_dimensions(5) == 8
assert find_num_dimensions(6) == 13
assert find_num_dimensions(7) == 21
